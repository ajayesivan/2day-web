:root {
  font-size: 10px;

  --color-body-bg: #e8e8e8;
  --color-white: white;
  --color-grey: grey;
  --color-black: #2E2E2E;
  --color-accent: #FFCF55;
  --color-accent-dark: #DD9F00;
  --color-danger: rgb(218, 57, 57);
  --color-danger-dark: rgb(168, 21, 21);
}

body {
  margin: 0;
  background-color: var(--color-body-bg);
  font-family: 'Rubik', sans-serif !important;
}

.today {
  width: 100%;
  max-width: 800px;
  box-sizing: border-box;
  margin: 0 auto;
  position: relative;
  padding-bottom: 4rem;
}

.header {
  z-index: 999;
  text-align: center;
  padding: 4rem 0 2rem;
  margin: 0;
  position: sticky;
  top: 0;
  background: linear-gradient(180deg, rgba(232, 232, 232,1) 0%, rgba(232, 232, 232,0.7670807453416149) 70%, rgba(232, 232, 232,0) 100%);;
  width: 100%;
  backdrop-filter: blur(3px);
}

.header__title {
  color: var(--color-black);
  font-size: 2.4rem;
  margin: 0;
  margin-bottom: 3rem;
}

.task-list {
  padding: 0 1.6rem;
  display: flex;
  flex-direction: column;
  gap: 1.8rem;
}

.task {
  width: 100%;
  background-color: var(--color-white);
  border-radius: 1.2rem;
  font-size: 1.8rem;
  padding: 1.8rem 2.4rem;
  box-sizing: border-box;
  display: flex;
  transition: all 0.3s;
  line-height: 2.4rem;
  align-items: center;
  position: relative;
  overflow: hidden;
  opacity: 0;
  transform: translateY(-200%);
  animation: addTask 0.5s forwards;
  transition: all 0.3s;
}

@keyframes addTask {
  from {
    opacity: 0;
    transform: translateY(-200%);
  }
  60% {
    opacity: 1;
    transform: translateY(20%);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes addDoneTask {
  from {
    opacity: 0;
    transform: translateY(-200%);
  }
  60% {
    opacity: 0.5;
    transform: translateY(20%);
  }
  to {
    opacity: 0.5;
    transform: translateY(0);
  }
}

@keyframes removeTask {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(-50%);
  }
}

@keyframes removeDoneTask {
  from {
    opacity: 0.5;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(-50%);
  }
}

@keyframes toggleTask {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  40% {
    opacity: 1;
    transform: translateY(-20%);
  }
  to {
    opacity: 0;
    transform: translateY(200%);
  }
}

@keyframes toggleDoneTask {
  from {
    opacity: 0.5;
    transform: translateY(0);
  }
  40% {
    opacity: 0.5;
    transform: translateY(-20%);
  }
  to {
    opacity: 0;
    transform: translateY(200%);
  }
}

.task:hover {
  box-shadow: 0px 0px 6px rgba(0, 0, 0, .10);
}

.task--done {
  animation-name: addDoneTask;
}

.task-toggle {
  animation: toggleTask 0.5s forwards;
}

.task--done.task-toggle {
  animation: toggleDoneTask 0.5s forwards;
}

.task--removal {
  animation: removeTask 0.5s forwards;
}

.task--done.task--removal {
  animation: removeDoneTask 0.5s forwards;
}

.task__checkbox {
  opacity: 0;
  width: 2.6rem;
  height: 2.2rem;
  cursor: pointer;
  margin-right: 1.8rem ;
}

.task__title {
  position: relative;
  transition: all 0.3s;
}

.task__title:before {
  transition: all 0.3s;
  content: '';
  display: block;
  position: absolute;
  top: 1.2rem;;
  width: 2.8rem;
  left: -4.4rem;
  height: .2rem;
  pointer-events: none;
  background-color: var(--color-grey);
}

.task__checkbox:hover + .task__title:before {
  background-color: var(--color-black);
}

.task__checkbox:hover + .task__title {
  color: var(--color-grey);
}

.task__checkbox:checked + .task__title:before {
  width: calc(100% + 5rem);
  background-color: var(--color-black);
}

.task__checkbox:checked + .task__title {
  color: var(--color-grey);
}

.task-editor {
  width: 100%;
  padding: 0 1.6rem;
  box-sizing: border-box;
  margin-bottom: 2rem;
}

.task-editor__input {
  width: 100%;
  box-sizing: border-box;
  border-radius: 1.2rem;
  padding: 1.8rem 2.4rem;
  padding-right: 8.4rem;
  outline: none;
  font-size: 1.8rem;
  color: var(--color-black);
  font-family: 'Rubik', sans-serif !important;
  border: 2px dashed var(--color-grey);
  background-color: transparent;
  transition: all 0.3s;
}

.task-editor__input:hover {
  border-color: var(--color-black);
}

.task-editor__input:focus {
  border-color: var(--color-accent);
}

.task-actions {
  height: 100%;
  right: -12rem;
  position: absolute;
  top: 0;
  display: flex;
  align-items: center;
  transition: 0.3s;
}

.task:hover .task-actions {
  right: 0;
}

.task--done .task-actions {
  transition: 0.15s;
}

.task.task--done:hover .task-actions{
  right: -6rem;
}

.task-time {
  font-size: 1.8rem;
  padding: 0;
  padding-right: 2.4rem;
  color: var(--color-grey);
}

.task-time--running {
  color: var(--color-accent);
  /* animation: taskTimeRunning 2s infinite; */
}

/* @keyframes taskTimeRunning {
  from {
    opacity: 1;
  }
  80% {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
} */

.timer-task-button {
  background-color: var(--color-accent);
  height: 100%;
  border: none;
  outline: none;
  width: 6rem;
  transition: all 0.3s;
  cursor: pointer;
}

.timer-task-button:hover {
  background-color: var(--color-accent-dark);
}

.delete-task-button {
  background-color: var(--color-danger);
  height: 100%;
  border: none;
  outline: none;
  width: 6rem;
  transition: all 0.3s;
  cursor: pointer;
}

.delete-task-button:hover {
  background-color: var(--color-danger-dark);
}

.task-editor--wrapper {
  position: relative;
  overflow: hidden;
}

.task-editor__button {
  background-color: var(--color-accent);
  height: 100%;
  border: none;
  outline: none;
  position: absolute;
  width: 6rem;
  right: -6rem;
  transition: all 0.3s;
  cursor: pointer;
  border-top-right-radius: 1.2rem;
  border-bottom-right-radius: 1.2rem;
}

.task-editor__button--visible {
  right: 0;
}

.task-editor__button:hover {
  background-color: var(--color-accent-dark);
}

.no-data-button {
  font-size: 16px;
  color: var(--color-black);
  text-align: center;
  margin: 4px 0;
  background: none;
  border: none;
  outline: none;
  transition: all 0.3s;
  cursor: pointer;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: none;
  pointer-events: none;
}

.no-data-button:hover {
  color: var(--color-accent-dark);
}

.no-data-button--visible {
  pointer-events: all;
  display: block;
}